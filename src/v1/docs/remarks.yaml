tags:
  - name: Remarks
    description: Endpoints for managing user remarks

paths:
  /v1/remarks:
    post:
      summary: Create a new remark
      tags:
        - Remarks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Remarks'
      responses:
        '201':
          description: The remark has been successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  data:
                    $ref: '#/components/schemas/Remarks'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'

    get:
      summary: Get all remarks by user ID
      tags:
        - Remarks
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
          description: The ID of the user to retrieve remarks for
      responses:
        '200':
          description: A list of remarks
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/remarksResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'

    delete:
      summary: delete remarks by UserId
      tags:
        - Remarks
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
            format: uuid
          description: The UserId of the remark to delete

      responses:
        '200':
          description: The remark was successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'

  /v1/remarks/{id}:
    put:
      summary: Update an existing remark
      tags:
        - Remarks
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the remark to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      responses:
        '200':
          description: The remark was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remarks'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'

    delete:
      summary: delete an existing remark
      tags:
        - Remarks
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: The ID of the remark to delete

      responses:
        '200':
          description: The remark was successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageModel'

components:
  schemas:
    Remarks:
      type: object
      required:
        - message
        - userId
      properties:
        message:
          type: string
          description: The content of the remark
        userId:
          type: string
          format: uuid

    remarksResponse:
      type: object
      properties:
        name:
          type: string
        profilePic:
          type: string
        message:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
